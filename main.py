from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
import json
import asyncio

from aiogram.types import ReplyKeyboardRemove
from aiogram.types.web_app_info import WebAppInfo
from dotenv import load_dotenv
import os
from aiogram import types
from aiogram import executor
import sqlite3 as sq

load_dotenv()
bot = Bot(token=os.getenv('TOKEN_BOT'))
dp = Dispatcher(bot, storage=MemoryStorage())

ADMIN_CHAT_ID = "5521511837"

base = sq.connect('data.db')
cur = base.cursor()

cur.execute("CREATE TABLE IF NOT EXISTS files(file_id TEXT PRIMARY KEY, user_id INTEGER)")
base.commit()


@dp.message_handler(commands="start")
async def start(message: types.Message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–æ—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –∑–∞–ø—Ä–æ—Å–∞",
                                    web_app=WebAppInfo(
                                        url=f"https://perevyazko1.github.io/bot-acc-front")))
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name} –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá',
                         reply_markup=markup)


@dp.message_handler(commands="send_form")
async def send_form(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –∏–ª–∏ —Å–∫—Ä–∏–Ω —Ç–æ–≤–∞—Ä–∞.")


@dp.message_handler(content_types=['web_app_data'])
async def web_app(message: types.Message):
    data_form = json.loads(message.web_app_data.data)
    print(data_form)
    send_form_text = (f"–ë—Ä–µ–Ω–¥: {data_form['brand']} \n\n"
                      f"–ò–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞  {data_form['name']} \n\n"
                      f"–ú–∞–≥–∞–∑–∏–Ω: {data_form['store']} \n\n"
                      f"–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä : {data_form['reference']}\n\n"
                      f"–û —Ç–æ–≤–∞—Ä–µ:\n\n {data_form['about']} ")
    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    if data_form['photo'] != "":
        await bot.send_photo(chat_id=ADMIN_CHAT_ID, photo=data_form['photo'], caption=send_form_text)
    else:
        await bot.send_message(chat_id=ADMIN_CHAT_ID, text=send_form_text)
    sent_message = await message.answer("–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å —Ç–æ–±–æ–π —Å–≤—è–∂—É—Ç—Å—è")
    await asyncio.sleep(10)
    await bot.delete_message(chat_id=message.chat.id, message_id=sent_message.message_id)


@dp.message_handler(content_types=types.ContentType.PHOTO)
async def handle_photo(message: types.Message):
    photo_id = message.photo[-1].file_unique_id  # –ü–æ–ª—É—á–∞–µ–º file_id —Å–∞–º–æ–π –∫—Ä—É–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

    user_id = message.from_user.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    cur.execute("INSERT INTO files (file_id, user_id) VALUES (?, ?)", (photo_id, user_id))
    base.commit()
    markup.add(types.KeyboardButton("–æ—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –∑–∞–ø—Ä–æ—Å–∞",
                                    web_app=WebAppInfo(
                                        url=f"https://perevyazko1.github.io/bot-acc-front#{photo_id}")))
    sent_message = await message.answer(f'–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã üëá',
                                        reply_markup=markup)
    await asyncio.sleep(10)
    await bot.delete_message(chat_id=message.chat.id, message_id=sent_message.message_id)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º—ã


@dp.message_handler(content_types=types.ContentTypes.TEXT)
async def reply_to_user(message: types.Message):
    if message.reply_to_message:

        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        print(message)
        photo = message.reply_to_message.photo[3]
        photo_id = photo['file_unique_id']
        cur.execute("SELECT user_id FROM files WHERE file_id = ?", (photo_id,))
        result = cur.fetchone()
        user_id = result[0]

        admin_message = message.text

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await bot.send_message(user_id, f"–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n{admin_message}")
    else:
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")


#

if __name__ == '__main__':
    executor.start_polling(dp)
